/**
 * generated by Xtext 2.24.0
 */
package org.xtext.example.mydsl.projectDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.projectDSL.Controller;
import org.xtext.example.mydsl.projectDSL.Endpoint;
import org.xtext.example.mydsl.projectDSL.Entity;
import org.xtext.example.mydsl.projectDSL.ProjectDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Controller</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.projectDSL.impl.ControllerImpl#getBase <em>Base</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.projectDSL.impl.ControllerImpl#getEndpoint <em>Endpoint</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ControllerImpl extends DeclarationImpl implements Controller
{
  /**
   * The cached value of the '{@link #getBase() <em>Base</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBase()
   * @generated
   * @ordered
   */
  protected EList<Entity> base;

  /**
   * The cached value of the '{@link #getEndpoint() <em>Endpoint</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndpoint()
   * @generated
   * @ordered
   */
  protected EList<Endpoint> endpoint;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ControllerImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ProjectDSLPackage.Literals.CONTROLLER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Entity> getBase()
  {
    if (base == null)
    {
      base = new EObjectResolvingEList<Entity>(Entity.class, this, ProjectDSLPackage.CONTROLLER__BASE);
    }
    return base;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Endpoint> getEndpoint()
  {
    if (endpoint == null)
    {
      endpoint = new EObjectContainmentEList<Endpoint>(Endpoint.class, this, ProjectDSLPackage.CONTROLLER__ENDPOINT);
    }
    return endpoint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ProjectDSLPackage.CONTROLLER__ENDPOINT:
        return ((InternalEList<?>)getEndpoint()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ProjectDSLPackage.CONTROLLER__BASE:
        return getBase();
      case ProjectDSLPackage.CONTROLLER__ENDPOINT:
        return getEndpoint();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ProjectDSLPackage.CONTROLLER__BASE:
        getBase().clear();
        getBase().addAll((Collection<? extends Entity>)newValue);
        return;
      case ProjectDSLPackage.CONTROLLER__ENDPOINT:
        getEndpoint().clear();
        getEndpoint().addAll((Collection<? extends Endpoint>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ProjectDSLPackage.CONTROLLER__BASE:
        getBase().clear();
        return;
      case ProjectDSLPackage.CONTROLLER__ENDPOINT:
        getEndpoint().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ProjectDSLPackage.CONTROLLER__BASE:
        return base != null && !base.isEmpty();
      case ProjectDSLPackage.CONTROLLER__ENDPOINT:
        return endpoint != null && !endpoint.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ControllerImpl
